services:
  # Databases
  # Auth DBs
  auth-mysql:
    image: mysql:8.3.0
    container_name: auth-mysql
    networks:
      - ecommerce
    ports:
      - "${AUTHENTICATION_MYSQL_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${AUTHENTICATION_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=authentication

  auth-redis:
    image: redis:7.2.4-alpine
    container_name: auth-redis
    networks:
      - ecommerce
    ports:
      - "${AUTHENTICATION_REDIS_PORT}:6379"

  #Services
  #Broker
  broker:
    build:
      context: ../../
      dockerfile: ./builds/docker/broker/Dockerfile
    container_name: broker
    image: ecommerce/broker
    networks:
      - ecommerce
    environment:
      - GRAFANA_LOKI_HOST=${GRAFANA_LOKI_HOST}
      - GRAFANA_LOKI_PORT=${GRAFANA_LOKI_PORT}
    ports:
      - "${BROKER_REST_PORT}:${BROKER_REST_PORT}"
      - "${BROKER_GRAPHQL_PORT}:${BROKER_GRAPHQL_PORT}"
    command: ["./app"]
    depends_on:
      - grafana

  #Authentication
  authentication:
    build:
      context: ../../
      dockerfile: ./builds/docker/authentication/Dockerfile
    container_name: authentication
    image: ecommerce/authentication
    environment:
      - AUTHENTICATION_GRPC_PORT=${AUTHENTICATION_GRPC_PORT}
      - AUTHENTICATION_MYSQL_ROOT_PASSWORD=${AUTHENTICATION_MYSQL_ROOT_PASSWORD}
      - AUTHENTICATION_MYSQL_PORT=${AUTHENTICATION_MYSQL_PORT}
      - AUTHENTICATION_MYSQL_HOST=${AUTHENTICATION_MYSQL_HOST}
      - AUTHENTICATION_REDIS_PORT=${AUTHENTICATION_REDIS_PORT}
      - GRAFANA_LOKI_HOST=${GRAFANA_LOKI_HOST}
      - GRAFANA_LOKI_PORT=${GRAFANA_LOKI_PORT}
    networks:
      - ecommerce
    ports:
      - "${AUTHENTICATION_GRPC_PORT}:${AUTHENTICATION_GRPC_PORT}"
    command: ["./app"]
    depends_on:
      - grafana

  #Frontend
  #Admin portal
  admin-portal:
    build:
      context: ../../
      dockerfile: ./builds/docker/frontend/admin-portal/Dockerfile
    container_name: admin-portal
    image: ecommerce/admin-portal
    networks:
      - ecommerce
    ports:
      - "${ADMIN_PORTAL_PORT}:3000"

  #Seller portal
  seller-portal:
    build:
      context: ../../
      dockerfile: ./builds/docker/frontend/seller-portal/Dockerfile
    container_name: seller-portal
    image: ecommerce/seller-portal
    networks:
      - ecommerce
    ports:
      - "${VENDOR_PORTAL_PORT}:3000"

  #Website
  website:
    build:
      context: ../../
      dockerfile: ./builds/docker/frontend/website/Dockerfile
    container_name: website
    image: ecommerce/website
    networks:
      - ecommerce
    ports:
      - "${WEBSITE_PORT}:3000"

  # Metrics, Logging and Tracing
  loki:
    image: grafana/loki
    container_name: loki
    networks:
      - ecommerce
    ports:
      - "${GRAFANA_LOKI_PORT}:3100"

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    networks:
      - ecommerce
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on:
      - loki
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ADMIN_USER=samarth
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ../../config/grafana:/etc/grafana/provisioning
      - ../../config/grafana/dashboards:/var/lib/grafana/dashboards

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - ecommerce
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - ${PROMETHEUS_PORT}:9090
    restart: unless-stopped
    volumes:
      - ../../config/prometheus:/etc/prometheus
networks:
  ecommerce:
    driver: bridge
